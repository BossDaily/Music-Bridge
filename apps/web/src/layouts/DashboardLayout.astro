---
import { DashboardLayoutWrapper } from '@/components/DashboardLayoutWrapper';
import '@/styles/global.css';

// Navigation items for the sidebar
const navigationItems = [
  {
    id: "home",
    title: "Home",
    url: "/test-dashboard",
    icon: "Home",
  },
  {
    id: "global-playlists",
    title: "Global Playlists",
    url: "#",
    icon: "Music",
  },
  {
    id: "sync-manager",
    title: "Sync Manager",
    url: "#",
    icon: "RotateCcw",
  },
  {
    id: "transfer-tool",
    title: "Transfer Tool",
    url: "#",
    icon: "Shuffle",
  },
  {
    id: "connected-services",
    title: "Connected Services",
    url: "#",
    icon: "Users",
  },
  {
    id: "settings",
    title: "Settings",
    url: "#",
    icon: "Settings",
  },
  {
    id: "prototype",
    title: "Prototype",
    url: "/test-dashboard/prototype",
    icon: "TestTube",
  },
];

const { pageTitle } = Astro.props;
const urlPathname = Astro.url.pathname;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>
    <script is:inline>
      const getThemePreference = () => {
        if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script>
  </head>
  <body>
    <DashboardLayoutWrapper
      navigationItems={navigationItems}
      userName="BossDaily"
      userEmail="boss@example.com"
      pageTitle={pageTitle}
      urlPathname={urlPathname}
      client:only="react"
    >
      <slot />
    </DashboardLayoutWrapper>
  </body>
</html>
