---
import "../styles/global.css";
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Music Bridge</title>
	</head>
	<body>
		<main class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
			<div class="container mx-auto px-4 py-8">
				<div class="text-center mb-12">
					<h1 class="text-5xl font-bold text-gray-900 mb-4">
						üéµ Music Bridge
					</h1>
					<p class="text-xl text-gray-600 max-w-2xl mx-auto">
						A modern music application built with Astro, React, Tailwind CSS, and Hono API
					</p>
				</div>
				
				<div class="grid md:grid-cols-2 gap-8 max-w-4xl mx-auto">
					<div class="bg-white rounded-lg shadow-lg p-6">
						<h2 class="text-2xl font-semibold text-gray-800 mb-4">Frontend Tech Stack</h2>
						<ul class="space-y-2 text-gray-600">
							<li class="flex items-center">
								<span class="w-2 h-2 bg-blue-500 rounded-full mr-3"></span>
								Astro Framework
							</li>
							<li class="flex items-center">
								<span class="w-2 h-2 bg-cyan-500 rounded-full mr-3"></span>
								React Components
							</li>
							<li class="flex items-center">
								<span class="w-2 h-2 bg-teal-500 rounded-full mr-3"></span>
								Tailwind CSS
							</li>
							<li class="flex items-center">
								<span class="w-2 h-2 bg-indigo-500 rounded-full mr-3"></span>
								TypeScript
							</li>
						</ul>
					</div>

					<div class="bg-white rounded-lg shadow-lg p-6">
						<h2 class="text-2xl font-semibold text-gray-800 mb-4">Backend Tech Stack</h2>
						<ul class="space-y-2 text-gray-600">
							<li class="flex items-center">
								<span class="w-2 h-2 bg-orange-500 rounded-full mr-3"></span>
								Hono Framework
							</li>
							<li class="flex items-center">
								<span class="w-2 h-2 bg-green-500 rounded-full mr-3"></span>
								Node.js Runtime
							</li>
							<li class="flex items-center">
								<span class="w-2 h-2 bg-blue-600 rounded-full mr-3"></span>
								TypeScript
							</li>
							<li class="flex items-center">
								<span class="w-2 h-2 bg-gray-600 rounded-full mr-3"></span>
								Docker Support
							</li>
						</ul>
					</div>
				</div>

				<div class="mt-12 text-center">
					<div class="bg-white rounded-lg shadow-lg p-8 max-w-2xl mx-auto">
						<h2 class="text-2xl font-semibold text-gray-800 mb-6">Backend Connection Test</h2>
						<div id="api-status" class="mb-4">
							<div class="animate-pulse">
								<div class="h-4 bg-gray-200 rounded w-3/4 mx-auto"></div>
							</div>
						</div>
						<button id="test-api" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition-colors">
							Test Backend Connection
						</button>
					</div>
				</div>
			</div>
		</main>

		<script>
			const apiStatusDiv = document.getElementById('api-status');
			const testButton = document.getElementById('test-api');

			async function testApiConnection() {
				try {
					const response = await fetch('http://localhost:8000/api/health');
					const data = await response.json();
					
					if (apiStatusDiv) {
						apiStatusDiv.innerHTML = `
							<div class="p-4 bg-green-100 border border-green-400 text-green-700 rounded">
								‚úÖ Backend Connected! Status: ${data.status} at ${new Date(data.timestamp).toLocaleString()}
							</div>
						`;
					}
				} catch (error) {
					if (apiStatusDiv) {
						apiStatusDiv.innerHTML = `
							<div class="p-4 bg-red-100 border border-red-400 text-red-700 rounded">
								‚ùå Backend Connection Failed: ${error instanceof Error ? error.message : String(error)}
							</div>
						`;
					}
				}
			}

			// Test backend on page load
			testApiConnection();

			// Test backend on button click
			if (testButton) {
				testButton.addEventListener('click', testApiConnection);
			}
		</script>
	</body>
</html>
